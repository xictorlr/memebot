name: Telegram Trading Alerts
on:
  schedule:
    # Ejecutar cada 5 minutos (más confiable)
    - cron: '*/5 * * * *'
  
  # Permitir ejecución manual
  workflow_dispatch:

jobs:
  send-alerts:
    runs-on: ubuntu-latest
    
    # Timeout para evitar ejecuciones colgadas
    timeout-minutes: 10
    
    steps:
    - name: Debug Info
      run: |
        echo "🕐 Ejecutando análisis automático a las $(date)"
        echo "🔗 Supabase URL: ${{ secrets.SUPABASE_URL }}"
        echo "🔑 Anon Key configurado: ${{ secrets.SUPABASE_ANON_KEY != '' }}"
        
    - name: Send Telegram Trading Alert
      shell: bash
      run: |
        set -e  # Activar exit on error para mejor debugging
        
        echo "🤖 Iniciando análisis automático de trading..."
        
        # Verificar que las variables estén configuradas
        if [ -z "${{ secrets.SUPABASE_URL }}" ]; then
          echo "❌ ERROR: SUPABASE_URL no está configurado en secrets"
          exit 1
        fi
        
        if [ -z "${{ secrets.SUPABASE_ANON_KEY }}" ]; then
          echo "❌ ERROR: SUPABASE_ANON_KEY no está configurado en secrets"
          exit 1
        fi
        
        # Llamar a la Edge Function de Supabase
        echo "📡 Llamando a Edge Function..."
        response=$(curl -s -w "\n%{http_code}" -X POST \
          "${{ secrets.SUPABASE_URL }}/functions/v1/trading-analyzer" \
          -H "Authorization: Bearer ${{ secrets.SUPABASE_ANON_KEY }}" \
          -H "Content-Type: application/json" \
          --max-time 300)
        
        curl_exit_code=$?
        
        # Verificar si curl funcionó
        if [ $curl_exit_code -ne 0 ]; then
          echo "❌ Error en curl (código: $curl_exit_code)"
          exit 1
        fi
        
        # Separar el código de estado HTTP del cuerpo de la respuesta
        http_code=$(echo "$response" | tail -n1)
        response_body=$(echo "$response" | head -n -1)
        
        echo "📊 HTTP Status: $http_code"
        echo "📊 Respuesta del análisis:"
        echo "$response_body"
        
        # Verificar si la respuesta HTTP fue exitosa
        if [[ "$http_code" == "200" ]]; then
          echo "✅ HTTP request successful"
          
          # Verificar si el análisis fue exitoso
          if echo "$response_body" | grep -q '"success":true'; then
            echo "✅ Análisis completado exitosamente"
            
            # Contar señales si existen
            if echo "$response_body" | grep -q '"signals"'; then
              signals_count=$(echo "$response_body" | jq -r '.signals | length' 2>/dev/null || echo "N/A")
              echo "📈 Señales encontradas: $signals_count"
            else
              echo "📈 No se encontraron señales en esta ejecución"
            fi
            
            echo "🎯 Análisis completado con éxito"
            exit 0
          else
            echo "❌ Análisis falló"
            echo "$response_body"
            exit 1
          fi
        else
          echo "❌ Error HTTP: $http_code"
          echo "Response: $response_body"
          exit 1
        fi
